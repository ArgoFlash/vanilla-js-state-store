// src/main.js                                                          // üìÑ Point d'entr√©e de l'application (bootstrap)
import { el } from "./utils/dom.js";                                    // ‚¨ÖÔ∏è Helper DOM pour cr√©er des √©l√©ments sans innerHTML
import { Header } from "./components/Header.js";                        // ‚¨ÖÔ∏è Composant d'en-t√™te (th√®me global)
import { Counter } from "./components/Counter.js";                      // ‚¨ÖÔ∏è Composant compteur (√©tat local via createState)
import { Todo } from "./components/Todo.js";                            // ‚¨ÖÔ∏è Composant Todo (√©tat global via store)

// On attend que tout le HTML soit pars√© avant de manipuler le DOM
document.addEventListener("DOMContentLoaded", () => {                   // ‚¨ÖÔ∏è √âvite les "undefined" sur #app si le script charge trop vite
  const container = el("div", { className: "container" });             // ‚¨ÖÔ∏è Conteneur principal centr√© avec largeur max (cf. CSS)

  container.appendChild(Header());                                      // ‚¨ÖÔ∏è Monte le Header (titre + bouton th√®me) en haut de la page

  const grid = el("div", { className: "grid" });                       // ‚¨ÖÔ∏è Grille responsive (1 ‚Üí 2 colonnes selon la largeur)
  grid.appendChild(Counter());                                          // ‚¨ÖÔ∏è Colonne 1 : composant Counter (d√©mo useState local)
  grid.appendChild(Todo());                                             // ‚¨ÖÔ∏è Colonne 2 : composant Todo (d√©mo store global)

  container.appendChild(grid);                                          // ‚¨ÖÔ∏è Ajoute la grille au container principal

  const app = document.getElementById("app");                           // ‚¨ÖÔ∏è R√©cup√®re le point de montage d√©fini dans index.html
  app.appendChild(container);                                           // ‚¨ÖÔ∏è Ins√®re toute l'application dans la page
});
